---
title: "2 - Your data budget - Classwork"
subtitle: "Introduction to tidymodels"
editor_options: 
  chunk_output_type: console
---

We recommend restarting R between each slide deck!

## Data on forests in Washington

```{r}
library(tidymodels)
library(forested)

forested
```

-   `forested` is decided on the ground by the team; other variables are from satellite/remote sensing data

## Your turn

*When is a good time to split your data?*

-   after quality check? distribution of predictor variables, linearity, normality?

-   trying to make sure the division of our test set **doesn't influence** the development of our model; so, split as early as possible;

-   using `glimpse` is okay; data quality should be assessed using the training set **after** the split

## Data splitting and spending

```{r}
set.seed(123)

forested_split <- initial_split(forested)
forested_split
```
[What is set.seed?](https://workshops.tidymodels.org/slides/annotations.html#what-is-set.seed)
-  the number doesn't matter, as long as you don't keep switching it to increase model performance

Extract the training and testing sets

```{r}
forested_train <- training(forested_split)
forested_test <- testing(forested_split)
```

## Your turn

Split your data so 20% is held out for the test set.

Try out different values in `set.seed()` to see how the results change.

Hint: Which argument in `initial_split()` handles the proportion split into training vs testing?

```{r}
# Your code here!
set.seed(123)
forested_split <- initial_split(forested, prop = 0.8)
forested_train <- training(forested_split)
forested_test <- testing(forested_split)

nrow(forested_train)
#> [1] 5685
nrow(forested_test)
#> [1] 1422
```
-  75/25% split is the default for `initial_split()`

## Your turn

Explore the `forested_train` data on your own!

-   What's the distribution of the outcome, `forested`?
-   What's the distribution of numeric variables like `precip_annual`?
-   How does the distribution of `forested` differ across the categorical variables?

```{r}
# Your code here!
glimpse(forested_train)

forested_train %>% 
  ggplot(aes(x = forested)) +
  geom_bar()

forested_train %>% 
  ggplot(aes(x = year, y = precip_annual, color = forested)) +
  geom_jitter(alpha = 0.6)

forested_train %>% 
  group_by(year) %>% 
  ggplot(aes(x = factor(year), y = precip_annual, fill = forested)) +
  geom_boxplot() +
  geom_point(aes(color = forested), alpha = 0.3, 
             position = position_jitterdodge(seed = 123))

forested_train %>% 
  ggplot(aes(x = elevation)) +
  geom_histogram()

forested_train %>% 
  ggplot(aes(x = land_type, fill = forested)) +
  geom_bar()

forested_train %>% 
  ggplot(aes(x = tree_no_tree, fill = forested)) +
  geom_bar()

forested_train %>% 
  ggplot(aes(x = precip_annual, fill = forested, group = forested)) +
  geom_histogram(position = "identity", alpha = .7)

forested_train %>% 
  ggplot(aes(x = precip_annual, fill = forested, group = forested)) +
  geom_histogram(position = "fill")

forested_train %>% 
  ggplot(aes(x = lon, y = lat, col = forested)) +
  geom_point()
```
-  classes are balanced; about half are forested and unforested
-  `elevation` is skewed right
-  `dew_temp` is bimodal
-  a couple of the categorical variables; e.g. `land_type` or `tree_no_tree` could be good predictors for `forested`; maybe even lat & long

